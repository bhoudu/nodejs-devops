name: Build & Test
on:
  push:
    branches:
    - init-docker-image
jobs:
  build:
    strategy:
      matrix:
        # node_version: [ 14, 16, 18 ]
        # node_version: [ 18 ]
        include:
#        - node_version: 14
#          full_node_version: v14.21.0
#        - node_version: 16
#          full_node_version: v16.18.0
        - node_version: 18
          full_node_version: v18.12.0
          terraform_version: 1.3.3
          terragrunt_version: 0.39.2
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: yarn install --frozen-lockfile
    - run: sh ./scripts/download.sh node-linux-x64-musl.tar.gz https://unofficial-builds.nodejs.org/download/release/${full_node_version}/node-${full_node_version}-linux-x64-musl.tar.gz
    - run: sh ./scripts/download.sh terraform_linux_amd64.zip https://releases.hashicorp.com/terraform/${terraform_version}/terraform_${terraform_version}_linux_amd64.zip
    - run: sh ./scripts/download.sh terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v${terragrunt_version}/terragrunt_linux_amd64
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        build-argsbuild-args: |
          NODE_VERSION=${node_version}
          FULL_NODE_VERSION=${full_node_version}
          TERRAFORM_VERSION=${terraform_version}
          TERRAGRUNT_VERSION=${terragrunt_version}
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/node_alpine_dind:latest
